version: '3.2'
services:

  # MYSQL service --> ports map 3306(pc):3306(docker)
  db_backend_sd:
    container_name: db_backend_sd
    image: mysql
    volumes:
      - "./backend/mysql/.mysql-data/db:/var/lib/mysql"
    command: --default-authentication-plugin=mysql_native_password --sql_mode=""
    ports:
      - "3306:3306"
    hostname: localhost
    environment:
      MYSQL_ROOT_USER: 'root'
      MYSQL_ROOT_PASSWORD: 'root'
      MYSQL_DATABASE: 'ifts12'
      MYSQL_USER: 'root'
      MYSQL_PASSWORD: 'root'
#    restart: always

  # API service BACKend --> ports map 4006(pc):4000(docker)
  api_backend_sd:
    container_name: api_backend_sd
    image: node
    depends_on:
      - db_backend_sd
    env_file:
      - backend/.env
    volumes:
      - "./backend:/var/www/html"
    working_dir: /var/www/html/
    dns:
      - 8.8.8.8
      - 8.8.4.4
    ports:
      - "4005:4005"
    tty: true
    command: bash -c "yarn && yarn start"
#    restart: always

  # WEB service FRONTend --> ports map 3006(pc):3000(docker)
  web_frontend_sd:
    container_name: web_frontend_sd
    image: node
    depends_on:
      - api_backend_sd
    env_file:
      - frontend/.env
    volumes:
      - "./frontend:/var/www/html"
    working_dir: /var/www/html/
    dns:
      - 8.8.8.8
      - 8.8.4.4
    ports:
      - "3005:3005"
    tty: true
    command: bash -c "yarn && yarn start"
#    restart: always

  # MYSQL web adminer --> ports map 8080(pc):8080(docker)
  db_adminer_sd:
    container_name: db_adminer_sd
    depends_on:
      - db_backend_sd
    image: adminer
    ports:
      - "8080:8080"
#    restart: always
